{"id":"node_modules/event-stream/node_modules/through/index.js","dependencies":[{"name":"C:\\dev\\Workspaces\\WEB_fastCampus\\bootstrap-test\\package.json","includedInParent":true,"mtime":1624817355327},{"name":"C:\\dev\\Workspaces\\WEB_fastCampus\\bootstrap-test\\node_modules\\event-stream\\node_modules\\through\\package.json","includedInParent":true,"mtime":1624817354942},{"name":"stream","loc":{"line":1,"column":21},"parent":"C:\\dev\\Workspaces\\WEB_fastCampus\\bootstrap-test\\node_modules\\event-stream\\node_modules\\through\\index.js","resolved":"C:\\dev\\Workspaces\\WEB_fastCampus\\bootstrap-test\\node_modules\\stream-browserify\\index.js"},{"name":"process","parent":"C:\\dev\\Workspaces\\WEB_fastCampus\\bootstrap-test\\node_modules\\event-stream\\node_modules\\through\\index.js","resolved":"C:\\dev\\Workspaces\\WEB_fastCampus\\bootstrap-test\\node_modules\\process\\browser.js"}],"generated":{"js":"var process = require(\"process\");\nvar Stream = require('stream')\n\n// through\n//\n// a stream that does nothing but re-emit the input.\n// useful for aggregating a series of changing but not ending streams into one stream)\n\nexports = module.exports = through\nthrough.through = through\n\n//create a readable writable stream.\n\nfunction through (write, end) {\n  write = write || function (data) { this.emit('data', data) }\n  end = end || function () { this.emit('end') }\n\n  var ended = false, destroyed = false\n  var stream = new Stream()\n  stream.readable = stream.writable = true\n  stream.paused = false  \n  stream.write = function (data) {\n    write.call(this, data)\n    return !stream.paused\n  }\n  //this will be registered as the first 'end' listener\n  //must call destroy next tick, to make sure we're after any\n  //stream piped from here. \n  stream.on('end', function () {\n    stream.readable = false\n    if(!stream.writable)\n      process.nextTick(function () {\n        stream.destroy()\n      })\n  })\n\n  stream.end = function (data) {\n    if(ended) return \n    //this breaks, because pipe doesn't check writable before calling end.\n    //throw new Error('cannot call end twice')\n    ended = true\n    if(arguments.length) stream.write(data)\n    this.writable = false\n    end.call(this)\n    if(!this.readable)\n      this.destroy()\n  }\n  stream.destroy = function () {\n    if(destroyed) return\n    destroyed = true\n    ended = true\n    stream.writable = stream.readable = false\n    stream.emit('close')\n  }\n  stream.pause = function () {\n    stream.paused = true\n  }\n  stream.resume = function () {\n    if(stream.paused) {\n      stream.paused = false\n      stream.emit('drain')\n    }\n  }\n  return stream\n}\n\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/event-stream/node_modules/through/index.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/event-stream/node_modules/through/index.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/event-stream/node_modules/through/index.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/event-stream/node_modules/through/index.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/event-stream/node_modules/through/index.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/event-stream/node_modules/through/index.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/event-stream/node_modules/through/index.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/event-stream/node_modules/through/index.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/event-stream/node_modules/through/index.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/event-stream/node_modules/through/index.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/event-stream/node_modules/through/index.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/event-stream/node_modules/through/index.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/event-stream/node_modules/through/index.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/event-stream/node_modules/through/index.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/event-stream/node_modules/through/index.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/event-stream/node_modules/through/index.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/event-stream/node_modules/through/index.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/event-stream/node_modules/through/index.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/event-stream/node_modules/through/index.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/event-stream/node_modules/through/index.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/event-stream/node_modules/through/index.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/event-stream/node_modules/through/index.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/event-stream/node_modules/through/index.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/event-stream/node_modules/through/index.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/event-stream/node_modules/through/index.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/event-stream/node_modules/through/index.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/event-stream/node_modules/through/index.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/event-stream/node_modules/through/index.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/event-stream/node_modules/through/index.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/event-stream/node_modules/through/index.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/event-stream/node_modules/through/index.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/event-stream/node_modules/through/index.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/event-stream/node_modules/through/index.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/event-stream/node_modules/through/index.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/event-stream/node_modules/through/index.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/event-stream/node_modules/through/index.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/event-stream/node_modules/through/index.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/event-stream/node_modules/through/index.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/event-stream/node_modules/through/index.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/event-stream/node_modules/through/index.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/event-stream/node_modules/through/index.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/event-stream/node_modules/through/index.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/event-stream/node_modules/through/index.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/event-stream/node_modules/through/index.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/event-stream/node_modules/through/index.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/event-stream/node_modules/through/index.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/event-stream/node_modules/through/index.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/event-stream/node_modules/through/index.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/event-stream/node_modules/through/index.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/event-stream/node_modules/through/index.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/event-stream/node_modules/through/index.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/event-stream/node_modules/through/index.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/event-stream/node_modules/through/index.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/event-stream/node_modules/through/index.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/event-stream/node_modules/through/index.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/event-stream/node_modules/through/index.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/event-stream/node_modules/through/index.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/event-stream/node_modules/through/index.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/event-stream/node_modules/through/index.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/event-stream/node_modules/through/index.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/event-stream/node_modules/through/index.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/event-stream/node_modules/through/index.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/event-stream/node_modules/through/index.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/event-stream/node_modules/through/index.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/event-stream/node_modules/through/index.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/event-stream/node_modules/through/index.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}}],"sources":{"node_modules/event-stream/node_modules/through/index.js":"var Stream = require('stream')\n\n// through\n//\n// a stream that does nothing but re-emit the input.\n// useful for aggregating a series of changing but not ending streams into one stream)\n\nexports = module.exports = through\nthrough.through = through\n\n//create a readable writable stream.\n\nfunction through (write, end) {\n  write = write || function (data) { this.emit('data', data) }\n  end = end || function () { this.emit('end') }\n\n  var ended = false, destroyed = false\n  var stream = new Stream()\n  stream.readable = stream.writable = true\n  stream.paused = false  \n  stream.write = function (data) {\n    write.call(this, data)\n    return !stream.paused\n  }\n  //this will be registered as the first 'end' listener\n  //must call destroy next tick, to make sure we're after any\n  //stream piped from here. \n  stream.on('end', function () {\n    stream.readable = false\n    if(!stream.writable)\n      process.nextTick(function () {\n        stream.destroy()\n      })\n  })\n\n  stream.end = function (data) {\n    if(ended) return \n    //this breaks, because pipe doesn't check writable before calling end.\n    //throw new Error('cannot call end twice')\n    ended = true\n    if(arguments.length) stream.write(data)\n    this.writable = false\n    end.call(this)\n    if(!this.readable)\n      this.destroy()\n  }\n  stream.destroy = function () {\n    if(destroyed) return\n    destroyed = true\n    ended = true\n    stream.writable = stream.readable = false\n    stream.emit('close')\n  }\n  stream.pause = function () {\n    stream.paused = true\n  }\n  stream.resume = function () {\n    if(stream.paused) {\n      stream.paused = false\n      stream.emit('drain')\n    }\n  }\n  return stream\n}\n\n"},"lineCount":67}},"error":null,"hash":"68d9abfcfc5be1a830ea2afb68f25719","cacheData":{"env":{}}}