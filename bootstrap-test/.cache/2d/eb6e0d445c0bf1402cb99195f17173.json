{"id":"node_modules/from/index.js","dependencies":[{"name":"C:\\dev\\Workspaces\\WEB_fastCampus\\bootstrap-test\\package.json","includedInParent":true,"mtime":1624817355327},{"name":"C:\\dev\\Workspaces\\WEB_fastCampus\\bootstrap-test\\node_modules\\from\\package.json","includedInParent":true,"mtime":1624817354931},{"name":"stream","loc":{"line":4,"column":21},"parent":"C:\\dev\\Workspaces\\WEB_fastCampus\\bootstrap-test\\node_modules\\from\\index.js","resolved":"C:\\dev\\Workspaces\\WEB_fastCampus\\bootstrap-test\\node_modules\\stream-browserify\\index.js"},{"name":"process","parent":"C:\\dev\\Workspaces\\WEB_fastCampus\\bootstrap-test\\node_modules\\from\\index.js","resolved":"C:\\dev\\Workspaces\\WEB_fastCampus\\bootstrap-test\\node_modules\\process\\browser.js"}],"generated":{"js":"var process = require(\"process\");\n\n'use strict';\n\nvar Stream = require('stream')\n\n// from\n//\n// a stream that reads from an source.\n// source may be an array, or a function.\n// from handles pause behaviour for you.\n\nmodule.exports =\nfunction from (source) {\n  if(Array.isArray(source)) {\n\t\tvar source_index = 0, source_len = source.length;\n    return from (function (i) {\n      if(source_index < source_len)\n        this.emit('data', source[source_index++])\n      else\n        this.emit('end')\n      return true\n    })\n  }\n  var s = new Stream(), i = 0\n  s.ended = false\n  s.started = false\n  s.readable = true\n  s.writable = false\n  s.paused = false\n  s.ended = false\n  s.pause = function () {\n    s.started = true\n    s.paused = true\n  }\n  function next () {\n    s.started = true\n    if(s.ended) return\n    while(!s.ended && !s.paused && source.call(s, i++, function () {\n      if(!s.ended && !s.paused)\n          process.nextTick(next);\n    }))\n      ;\n  }\n  s.resume = function () {\n    s.started = true\n    s.paused = false\n    next()\n  }\n  s.on('end', function () {\n    s.ended = true\n    s.readable = false\n    process.nextTick(s.destroy)\n  })\n  s.destroy = function () {\n    s.ended = true\n    s.emit('close') \n  }\n  /*\n    by default, the stream will start emitting at nextTick\n    if you want, you can pause it, after pipeing.\n    you can also resume before next tick, and that will also\n    work.\n  */\n  process.nextTick(function () {\n    if(!s.started) s.resume()\n  })\n  return s\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/from/index.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/from/index.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/from/index.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/from/index.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/from/index.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/from/index.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/from/index.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/from/index.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/from/index.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/from/index.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/from/index.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/from/index.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/from/index.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/from/index.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/from/index.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/from/index.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/from/index.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/from/index.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/from/index.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/from/index.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/from/index.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/from/index.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/from/index.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/from/index.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/from/index.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/from/index.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/from/index.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/from/index.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/from/index.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/from/index.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/from/index.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/from/index.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/from/index.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/from/index.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/from/index.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/from/index.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/from/index.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/from/index.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/from/index.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/from/index.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/from/index.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/from/index.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/from/index.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/from/index.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/from/index.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/from/index.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/from/index.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/from/index.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/from/index.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/from/index.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/from/index.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/from/index.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/from/index.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/from/index.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/from/index.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/from/index.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/from/index.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/from/index.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/from/index.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/from/index.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/from/index.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/from/index.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/from/index.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/from/index.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/from/index.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/from/index.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/from/index.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/from/index.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/from/index.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}}],"sources":{"node_modules/from/index.js":"\n'use strict';\n\nvar Stream = require('stream')\n\n// from\n//\n// a stream that reads from an source.\n// source may be an array, or a function.\n// from handles pause behaviour for you.\n\nmodule.exports =\nfunction from (source) {\n  if(Array.isArray(source)) {\n\t\tvar source_index = 0, source_len = source.length;\n    return from (function (i) {\n      if(source_index < source_len)\n        this.emit('data', source[source_index++])\n      else\n        this.emit('end')\n      return true\n    })\n  }\n  var s = new Stream(), i = 0\n  s.ended = false\n  s.started = false\n  s.readable = true\n  s.writable = false\n  s.paused = false\n  s.ended = false\n  s.pause = function () {\n    s.started = true\n    s.paused = true\n  }\n  function next () {\n    s.started = true\n    if(s.ended) return\n    while(!s.ended && !s.paused && source.call(s, i++, function () {\n      if(!s.ended && !s.paused)\n          process.nextTick(next);\n    }))\n      ;\n  }\n  s.resume = function () {\n    s.started = true\n    s.paused = false\n    next()\n  }\n  s.on('end', function () {\n    s.ended = true\n    s.readable = false\n    process.nextTick(s.destroy)\n  })\n  s.destroy = function () {\n    s.ended = true\n    s.emit('close') \n  }\n  /*\n    by default, the stream will start emitting at nextTick\n    if you want, you can pause it, after pipeing.\n    you can also resume before next tick, and that will also\n    work.\n  */\n  process.nextTick(function () {\n    if(!s.started) s.resume()\n  })\n  return s\n}\n"},"lineCount":70}},"error":null,"hash":"fd0d4be7110220bac459236decd09a49","cacheData":{"env":{}}}