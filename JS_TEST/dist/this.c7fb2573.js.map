{"version":3,"sources":["this.js"],"names":["timer","name","timeout","setTimeout","console","log"],"mappings":"AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAMA,KAAK,GAAG;AACZC,EAAAA,IAAI,EAAE,YADM;AAEZC,EAAAA,OAAO,EAAE,mBAAY;AAAA;;AACnB;AACAC,IAAAA,UAAU,CAAC,YAAM;AAAE;AACjBC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAI,CAACJ,IAAjB;AACD,KAFS,EAEP,IAFO,CAAV;AAGD;AAPW,CAAd;AASAD,KAAK,CAACE,OAAN","file":"this.c7fb2573.js","sourceRoot":"..","sourcesContent":["// this\r\n// 일반 (Nomal) 함수는 호출 위치에서 따라 this 정의\r\n\r\n/* const miiinsseong = {\r\n  name: 'minsseong',\r\n  normal: function () {\r\n    console.log(this.name)\r\n  },\r\n  //  화살표(Arrow) 함수는 자신이 선언된 함수 범위에서 this 정의\r\n  arrow: () => {\r\n    console.log(this.name)\r\n  }\r\n}\r\n\r\nmiiinsseong.normal()\r\nmiiinsseong.arrow()\r\n\r\nconst amy = {\r\n  name: 'Amy',\r\n  normal: miiinsseong.normal,\r\n  arrow: miiinsseong.arrow\r\n}\r\n\r\namy.normal()\r\namy.arrow() */\r\n\r\n/* function User(name) {\r\n  this.name = name\r\n}\r\nUser.prototype.normal = function () {\r\n  console.log(this.name)\r\n}\r\nUser.prototype.arrow = () => {\r\n  console.log(this.name)\r\n}\r\nconst miinsseong = new User('minsseong')\r\n\r\nmiinsseong.normal()\r\nmiinsseong.arrow() */\r\n\r\nconst timer = {\r\n  name: 'miinsseong',\r\n  timeout: function () {\r\n    //setTimeout(함수, 시간)\r\n    setTimeout(() => { //여기서 function함수를 안쓴건 setTimeout에서 계속 돌이때문에 값이안나온다.\r\n      console.log(this.name)\r\n    }, 2000)\r\n  }\r\n}\r\ntimer.timeout()"]}