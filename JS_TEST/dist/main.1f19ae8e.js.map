{"version":3,"sources":["main.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","file":"main.1f19ae8e.js","sourceRoot":"..","sourcesContent":["/*\r\nconst minseong = {\r\n  firstName: 'miiin_sseong',\r\n  lastName: 'song',\r\n  getfullName: function () {\r\n    return `${this.firstName} ${this.lastName}`\r\n  }\r\n}\r\nconsole.log(minseong)\r\n\r\n\r\nconst actor = {\r\n  firstName: 'Leonardo',\r\n  lastName: 'Dicaprop',\r\n  getfullName: function () {\r\n    return `${this.firstName} ${this.lastName}`\r\n  }\r\n}\r\nconsole.log(actor.getfullName())\r\n*/\r\n\r\n/*\r\n클래스\r\nfunction user(first, last) {\r\n  this.firstName = first\r\n  this.lastName = last\r\n}\r\nuser.prototype.getFullName = function () {\r\n  return `${this.firstName} ${this.lastName}`\r\n}\r\nconst minseong = new user('minseong', 'song')\r\nconst amy = new user('Amy', 'Clarke')\r\nconst neo = new user('Neo', 'Smith')\r\n\r\nconsole.log(minseong.getFullName())\r\nconsole.log(minseong.getFullName())\r\nconsole.log(amy.getFullName())\r\nconsole.log(neo)\r\n */\r\n\r\n//화살표 함수\r\n// () => {} vs function () {}\r\n\r\n/* const double = function (x, y) {\r\n  return x * 2\r\n}\r\nconsole.log('double: ', double(7))\r\n\r\nconst doubleArrow = (x) => ({\r\n  name : 'Miiin_sseong'\r\n})\r\nconsole.log('doubleArrow', doubleArrow(7)) */\r\n\r\n// 즉시실행함수\r\n// IIFE, Immediately-Invoked Function Expression\r\n/* const a = 7\r\n\r\nfunction double() {\r\n  console.log(a * 2)\r\n}\r\ndouble();\r\n\r\n(function () {\r\n  console.log(a * 2)\r\n})();\r\n\r\n(function () {\r\n  console.log(a * 2)\r\n})();\r\n\r\n(function () {\r\n  console.log(a * 2)\r\n}()); */\r\n\r\n//호이스팅(Hoisting)\r\n// 함수 선언부가 유효범위 최상단으로 끌어올려지는 현상\r\n\r\n/* const a =7\r\n\r\nconst double = function () {\r\n  console.log(a*2)\r\n}\r\ndouble() */\r\n\r\n// 타이머 함수\r\n// setTimeout(함수, 시간) : 일정 시간 후 함수 실행\r\n// setInterval(함수, 시간) : 시간 간격마다 함수 실행\r\n//  clearTimeOut() : 설정된 Timeout 함수를 종료\r\n//  clearInterval() : 설정된 Interval 함수를 종료\r\n\r\n/* const timer = setTimeout(function () {\r\n  console.log('A-yo')\r\n}, 2000)\r\n\r\nconst h1El = document.querySelector('h1')\r\nh1El.addEventListener('click', function() {\r\n  clearTimeout(timer)\r\n}); */\r\n\r\n\r\n/* setTimeout( () => {\r\n  console.log('miiin_sseong')\r\n}, 1000) */\r\n\r\n/* const timer = setTimeout(() => {\r\n  console.log('miiin_sseong')\r\n}, 3000) */\r\n\r\n/* const timer = setInterval(() => {\r\n  console.log('miiin_sseong')\r\n}, 3000) */\r\n\r\n/* const h1El = document.querySelector('h1')\r\nh1El.addEventListener('click', () => {\r\n  clearTimeout(timer)\r\n}) */\r\n/* const h1El = document.querySelector('h1')\r\nh1El.addEventListener('click', () => {\r\n  clearInterval(timer)\r\n}) */\r\n\r\n\r\n// 콜백(Callback)\r\n// 함수의 인수로 사용되는 함수\r\n\r\n// setTimeout(함수, 시간)\r\n/* function timeout(Callback) {\r\n  setTimeout(() =>{\r\n    console.log('miiin_sseong')\r\n    Callback()\r\n  },3000)\r\n}\r\ntimeout(() => {\r\n  console.log('Done')\r\n}) */\r\n\r\n// 생성자 함수(prototype)\r\n"]}